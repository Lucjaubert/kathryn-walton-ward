@import "./_variables.scss";
@import "node_modules/bootstrap/scss/bootstrap";

@font-face {
    font-family: 'Atkinson Hyperlegible Reg';
    src: url('/assets/fonts/AtkinsonHyperlegible-Regular.ttf') format('truetype');
}

@font-face {
    font-family: 'Atkinson Hyperlegible Bd';
    src: url('/assets/fonts/AtkinsonHyperlegible-Bold.ttf') format('truetype');
}

@font-face {
    font-family: 'Garamond Premier Pro';
    src: url('/assets/fonts/GaramondPremrPro.ttf') format('truetype');
}

@font-face {
    font-family: 'Garamond Premier Pro Bd';
    src: url('/assets/fonts/GaramondPremrPro-Bd.ttf') format('truetype');
}


.app-container {
    position: relative;
    display: flex;
    flex-direction: column;
    min-height: 100vh;

    @media (max-width: $breakpoint-xxl) {
        padding: 0 14rem; 
    }

    @media (max-width: $breakpoint-xl) {
        padding: 0 12rem; 
    }

    @media (max-width: $breakpoint-lg) {
        padding: 0 8rem; 
    }

    @media (max-width: $breakpoint-md) {
        padding: 0 4rem; 
    }

    @media (max-width: $breakpoint-sm) {
        padding: 0 2rem; 
    }

    &.loading {
        opacity: 0.5;
    }
}

html, body {
    font-family: 'Atkinson Hyperlegible', sans-serif;
    color: map-get($theme-colors, "purple-dark");
    background-color: map-get($theme-colors, "white");
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
}

h1, h2, h3, p, ul, li, a {
    font-weight: map-get($font-weight, "regular");
    font-size: map-get($font-size, "30");
}

h1 {
    font-family: 'Garamond Premier Pro';
    color: map-get($theme-colors, "red");
    font-size: map-get($font-size, "150");
}

h2 {
    font-family: 'Garamond Premier Pro';
    color: map-get($theme-colors, "purple-dark");
    font-size: map-get($font-size, "90");
}

h3 {
    font-family: 'Garamond Premier Pro';
    color: map-get($theme-colors, "purple-dark");
    font-size: map-get($font-size, "50");
}

footer {
    position: absolute;
    bottom: 0;
    width: 100%;
    transition: opacity 0.5s ease-in-out, visibility 0.5s;
}


// Example of creating padding classes dynamically
@each $breakpoint, $breakpoint-value in $breakpoints {
  @each $name, $size in $spacers {
    .p-#{$breakpoint}-#{$name} {
      @media (min-width: #{$breakpoint-value}) {
        padding: $size;
      }
    }
  }
}
